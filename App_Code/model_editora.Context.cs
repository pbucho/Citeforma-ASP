//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Linq;

public partial class EditoraEntities : DbContext
{
    public EditoraEntities()
        : base("name=EditoraEntities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<Autore> Autores { get; set; }
    public virtual DbSet<AutoresLivro> AutoresLivros { get; set; }
    public virtual DbSet<Categoria> Categorias { get; set; }
    public virtual DbSet<Cliente> Clientes { get; set; }
    public virtual DbSet<EncomendaLivro> EncomendaLivros { get; set; }
    public virtual DbSet<Encomenda> Encomendas { get; set; }
    public virtual DbSet<Livro> Livros { get; set; }

    public virtual int SP_Autores_Delete(Nullable<int> iDAutor)
    {
        var iDAutorParameter = iDAutor.HasValue ?
            new ObjectParameter("IDAutor", iDAutor) :
            new ObjectParameter("IDAutor", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Autores_Delete", iDAutorParameter);
    }

    public virtual int SP_Autores_Insert(string nome, string paisOrigem, Nullable<bool> premioNobel, string resumoObra)
    {
        var nomeParameter = nome != null ?
            new ObjectParameter("Nome", nome) :
            new ObjectParameter("Nome", typeof(string));

        var paisOrigemParameter = paisOrigem != null ?
            new ObjectParameter("PaisOrigem", paisOrigem) :
            new ObjectParameter("PaisOrigem", typeof(string));

        var premioNobelParameter = premioNobel.HasValue ?
            new ObjectParameter("PremioNobel", premioNobel) :
            new ObjectParameter("PremioNobel", typeof(bool));

        var resumoObraParameter = resumoObra != null ?
            new ObjectParameter("ResumoObra", resumoObra) :
            new ObjectParameter("ResumoObra", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Autores_Insert", nomeParameter, paisOrigemParameter, premioNobelParameter, resumoObraParameter);
    }

    public virtual ObjectResult<SP_Autores_Select_Result> SP_Autores_Select()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Autores_Select_Result>("SP_Autores_Select");
    }

    public virtual ObjectResult<SP_Autores_Select_By_IDAutor_Result> SP_Autores_Select_By_IDAutor(Nullable<int> iDAutor)
    {
        var iDAutorParameter = iDAutor.HasValue ?
            new ObjectParameter("IDAutor", iDAutor) :
            new ObjectParameter("IDAutor", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Autores_Select_By_IDAutor_Result>("SP_Autores_Select_By_IDAutor", iDAutorParameter);
    }

    public virtual ObjectResult<SP_Autores_Select_By_Nome_Result> SP_Autores_Select_By_Nome(string nome)
    {
        var nomeParameter = nome != null ?
            new ObjectParameter("Nome", nome) :
            new ObjectParameter("Nome", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Autores_Select_By_Nome_Result>("SP_Autores_Select_By_Nome", nomeParameter);
    }

    public virtual ObjectResult<SP_Autores_Select_By_PremioNobel_Result> SP_Autores_Select_By_PremioNobel(Nullable<bool> premioNobel)
    {
        var premioNobelParameter = premioNobel.HasValue ?
            new ObjectParameter("PremioNobel", premioNobel) :
            new ObjectParameter("PremioNobel", typeof(bool));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Autores_Select_By_PremioNobel_Result>("SP_Autores_Select_By_PremioNobel", premioNobelParameter);
    }

    public virtual int SP_Autores_Update(Nullable<int> iDAutor, string nome, string paisOrigem, Nullable<bool> premioNobel, string resumoObra)
    {
        var iDAutorParameter = iDAutor.HasValue ?
            new ObjectParameter("IDAutor", iDAutor) :
            new ObjectParameter("IDAutor", typeof(int));

        var nomeParameter = nome != null ?
            new ObjectParameter("Nome", nome) :
            new ObjectParameter("Nome", typeof(string));

        var paisOrigemParameter = paisOrigem != null ?
            new ObjectParameter("PaisOrigem", paisOrigem) :
            new ObjectParameter("PaisOrigem", typeof(string));

        var premioNobelParameter = premioNobel.HasValue ?
            new ObjectParameter("PremioNobel", premioNobel) :
            new ObjectParameter("PremioNobel", typeof(bool));

        var resumoObraParameter = resumoObra != null ?
            new ObjectParameter("ResumoObra", resumoObra) :
            new ObjectParameter("ResumoObra", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Autores_Update", iDAutorParameter, nomeParameter, paisOrigemParameter, premioNobelParameter, resumoObraParameter);
    }

    public virtual int SP_Categorias_Delete(Nullable<int> iDCategoria)
    {
        var iDCategoriaParameter = iDCategoria.HasValue ?
            new ObjectParameter("IDCategoria", iDCategoria) :
            new ObjectParameter("IDCategoria", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Categorias_Delete", iDCategoriaParameter);
    }

    public virtual int SP_Categorias_Insert(string categoria, string descricao)
    {
        var categoriaParameter = categoria != null ?
            new ObjectParameter("Categoria", categoria) :
            new ObjectParameter("Categoria", typeof(string));

        var descricaoParameter = descricao != null ?
            new ObjectParameter("Descricao", descricao) :
            new ObjectParameter("Descricao", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Categorias_Insert", categoriaParameter, descricaoParameter);
    }

    public virtual ObjectResult<SP_Categorias_Select_Result> SP_Categorias_Select()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Categorias_Select_Result>("SP_Categorias_Select");
    }

    public virtual int SP_Categorias_Update(Nullable<int> iDCategoria, string categoria, string descricao)
    {
        var iDCategoriaParameter = iDCategoria.HasValue ?
            new ObjectParameter("IDCategoria", iDCategoria) :
            new ObjectParameter("IDCategoria", typeof(int));

        var categoriaParameter = categoria != null ?
            new ObjectParameter("Categoria", categoria) :
            new ObjectParameter("Categoria", typeof(string));

        var descricaoParameter = descricao != null ?
            new ObjectParameter("Descricao", descricao) :
            new ObjectParameter("Descricao", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Categorias_Update", iDCategoriaParameter, categoriaParameter, descricaoParameter);
    }
}
